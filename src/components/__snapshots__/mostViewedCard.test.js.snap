// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MostViewedCard renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MostViewedCard
    headline=""
    img_url=""
    pub_date=""
    section=""
    summary=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Grid>
          <GridRow
            reversed="mobile"
          >
            <GridColumn
              computer={8}
              largeScreen={8}
              mobile={15}
              tablet={8}
            >
              <Header
                as="h3"
              >
                <HeaderSubheader>
                  
                   - 
                  
                </HeaderSubheader>
                
              </Header>
              <div
                className="margin-img"
              >
                
              </div>
            </GridColumn>
            <GridColumn
              computer={8}
              largeScreen={8}
              mobile={15}
              tablet={8}
            >
              <Image
                as="img"
                centered={true}
                src=""
                ui={true}
              />
            </GridColumn>
          </GridRow>
        </Grid>,
        <Divider />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridRow
            reversed="mobile"
          >
            <GridColumn
              computer={8}
              largeScreen={8}
              mobile={15}
              tablet={8}
            >
              <Header
                as="h3"
              >
                <HeaderSubheader>
                  
                   - 
                  
                </HeaderSubheader>
                
              </Header>
              <div
                className="margin-img"
              >
                
              </div>
            </GridColumn>
            <GridColumn
              computer={8}
              largeScreen={8}
              mobile={15}
              tablet={8}
            >
              <Image
                as="img"
                centered={true}
                src=""
                ui={true}
              />
            </GridColumn>
          </GridRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Header
                  as="h3"
                >
                  <HeaderSubheader>
                    
                     - 
                    
                  </HeaderSubheader>
                  
                </Header>
                <div
                  className="margin-img"
                >
                  
                </div>
              </GridColumn>,
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Image
                  as="img"
                  centered={true}
                  src=""
                  ui={true}
                />
              </GridColumn>,
            ],
            "reversed": "mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Header
                    as="h3"
                  >
                    <HeaderSubheader>
                      
                       - 
                      
                    </HeaderSubheader>
                    
                  </Header>,
                  <div
                    className="margin-img"
                  >
                    
                  </div>,
                ],
                "computer": 8,
                "largeScreen": 8,
                "mobile": 15,
                "tablet": 8,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "h3",
                    "children": Array [
                      <HeaderSubheader>
                        
                         - 
                        
                      </HeaderSubheader>,
                      "",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          "",
                          " - ",
                          "",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        "",
                        " - ",
                        "",
                      ],
                      "type": [Function],
                    },
                    "",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "className": "margin-img",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "div",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Image
                  as="img"
                  centered={true}
                  src=""
                  ui={true}
                />,
                "computer": 8,
                "largeScreen": 8,
                "mobile": 15,
                "tablet": 8,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "img",
                  "centered": true,
                  "src": "",
                  "ui": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Grid>
            <GridRow
              reversed="mobile"
            >
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Header
                  as="h3"
                >
                  <HeaderSubheader>
                    
                     - 
                    
                  </HeaderSubheader>
                  
                </Header>
                <div
                  className="margin-img"
                >
                  
                </div>
              </GridColumn>
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Image
                  as="img"
                  centered={true}
                  src=""
                  ui={true}
                />
              </GridColumn>
            </GridRow>
          </Grid>,
          <Divider />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <GridRow
              reversed="mobile"
            >
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Header
                  as="h3"
                >
                  <HeaderSubheader>
                    
                     - 
                    
                  </HeaderSubheader>
                  
                </Header>
                <div
                  className="margin-img"
                >
                  
                </div>
              </GridColumn>
              <GridColumn
                computer={8}
                largeScreen={8}
                mobile={15}
                tablet={8}
              >
                <Image
                  as="img"
                  centered={true}
                  src=""
                  ui={true}
                />
              </GridColumn>
            </GridRow>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <GridColumn
                  computer={8}
                  largeScreen={8}
                  mobile={15}
                  tablet={8}
                >
                  <Header
                    as="h3"
                  >
                    <HeaderSubheader>
                      
                       - 
                      
                    </HeaderSubheader>
                    
                  </Header>
                  <div
                    className="margin-img"
                  >
                    
                  </div>
                </GridColumn>,
                <GridColumn
                  computer={8}
                  largeScreen={8}
                  mobile={15}
                  tablet={8}
                >
                  <Image
                    as="img"
                    centered={true}
                    src=""
                    ui={true}
                  />
                </GridColumn>,
              ],
              "reversed": "mobile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Header
                      as="h3"
                    >
                      <HeaderSubheader>
                        
                         - 
                        
                      </HeaderSubheader>
                      
                    </Header>,
                    <div
                      className="margin-img"
                    >
                      
                    </div>,
                  ],
                  "computer": 8,
                  "largeScreen": 8,
                  "mobile": 15,
                  "tablet": 8,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "h3",
                      "children": Array [
                        <HeaderSubheader>
                          
                           - 
                          
                        </HeaderSubheader>,
                        "",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            "",
                            " - ",
                            "",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          "",
                          " - ",
                          "",
                        ],
                        "type": [Function],
                      },
                      "",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "",
                      "className": "margin-img",
                    },
                    "ref": null,
                    "rendered": "",
                    "type": "div",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Image
                    as="img"
                    centered={true}
                    src=""
                    ui={true}
                  />,
                  "computer": 8,
                  "largeScreen": 8,
                  "mobile": 15,
                  "tablet": 8,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": "img",
                    "centered": true,
                    "src": "",
                    "ui": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
